package gorest;

import static org.hamcrest.Matchers.is;

import java.util.HashMap;
import java.util.UUID;

import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import log4j.BaseTest;

public class CreateUpdateDeleteUser extends BaseTest {
	
	public static HashMap<String,String> map=new HashMap<String,String>();
	
	UUID uuid=UUID.randomUUID();
	
	String id;
	
	@Test(priority=0)
	public void postData() {
		map.put("name", "aryamaan");
		logger.info("Added name");
		map.put("email", "aryamaan"+uuid+"@yahoo.com");
		logger.info("Added email");
		map.put("gender","male");
		logger.info("Added gender");
		map.put("status", "active");
		logger.info("Added status");
		RestAssured.baseURI="https://gorest.co.in";
		RestAssured.basePath="/public/v2/users";
		logger.info("Payload Created");
	}
	
	@Test(priority=1)
	public void createUSer() {
		Response response=RestAssured.given().contentType("application/json").
		body(map).
		header("Authorization","Bearer 2a34c2d6931041949491bc131720682ee0e60a249ecd39dbdac9598cdc1a1e04").
		when().post().then().log().all().contentType(ContentType.JSON).extract().response();
		
		logger.info("Resource created and Response captured");
		
		JsonPath jsonPath=response.jsonPath();
		System.out.println("Response = "+ jsonPath.get("id"));
		
		logger.info("jsonPath created");
		
		id=jsonPath.get("id").toString();
		logger.info("Resource id captured");
		
	}
	
	@Test(priority=2)
	public void updateUser() {
		
		map.put("name", "captainVyom");
		map.put("email", "aryamaan"+uuid+"@yahoo.com");
		map.put("gender","male");
		map.put("status", "active");
		RestAssured.baseURI="https://gorest.co.in";
		RestAssured.basePath="/public/v2/users/"+id;
		logger.info("Payload created for updating resource");
		
		RestAssured.given().contentType("application/json").
		body(map).header("Authorization","Bearer 2a34c2d6931041949491bc131720682ee0e60a249ecd39dbdac9598cdc1a1e04").when().
		put().then().log().all().and().body("name", is("captainVyom"));
		logger.info("Payload updtaed");
		
	}
	
	@Test(priority=3)
	public void deleteUser() {
		RestAssured.baseURI=("https://gorest.co.in");
		RestAssured.basePath="/public/v2/users/"+id;
		RestAssured.given().contentType("application/json").header("Authorization","Bearer 2a34c2d6931041949491bc131720682ee0e60a249ecd39dbdac9598cdc1a1e04").
		when().delete().then().statusCode(204);
		System.out.println(id);
		logger.info("Resource deleted");
	}

}
